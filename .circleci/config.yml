version: 2.1
jobs:
  unit-test:
    docker:
    - image: circleci/python:3.8
    environment:
      POETRY_CACHE_DIR: /home/circleci/project/.poetry
    steps:
    - checkout
    - restore_cache:
        keys:
        - deps-{{ checksum "poetry.lock" }}
    - run:
        command: poetry install
        name: Poetry - install
    - run:
        command: poetry run python -m pytest --junitxml=pytest_report/report.xml
        name: Run pytest
    - store_test_results:
        path: /home/circleci/project/pytest_report/
    - save_cache:
        key: deps-{{ checksum "poetry.lock" }}
        paths:
        - /home/circleci/project/.poetry/virtualenvs
  docker-build:
    docker:
    - image: circleci/python:3.8
    steps:
    - checkout
    - setup_remote_docker:
        # Caching not available on free plan
        docker_layer_caching: false
    - run: |
        TAG=1.0.$CIRCLE_BUILD_NUM
        poetry export -f requirements.txt -o requirements.txt
        docker build -t armakuni/circleci-workflow-dashboard:$TAG .
        docker tag armakuni/circleci-workflow-dashboard:$TAG armakuni/circleci-workflow-dashboard:latest
        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
        docker push armakuni/circleci-workflow-dashboard:latest
        docker push armakuni/circleci-workflow-dashboard:$TAG

workflows:
  version: 2
  deploy-docker:
    jobs:
    - unit-test:
        filters:
          branches:
            only: master
    - docker-build:
        requires:
        - unit-test
